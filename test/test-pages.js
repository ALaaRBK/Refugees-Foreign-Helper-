var expect  = require('chai').expect;
var request = require('request');

it('Main page content', function(done) {
    request('http://localhost:3000/main' , function(error, response, body) {
        expect(response.body).to.equal('hello ');
        done();
    });
});

    it('Main page status', function(done) {
    request('http://localhost:3000/main' , function(error, response, body) {
        expect(response.statusCode).to.equal(200);
        done();
    });
});

    it('About page content ', function(done) {
    request('http://localhost:3000/login' , function(error, response, body) {
        expect(response.statusCode).to.equal(404);
        done();
    });
});

    it('About page content ', function(done) {
    request('http://localhost:3000/login' , function(error, response, body) {
        expect(response.client._httpMessage.method).to.equal('GET');

        done();
    });
});




// [ 'connecting',
//   '_hadError',
//   '_handle',
//   '_parent',
//   '_host',
//   '_readableState',
//   'readable',
//   'domain',
//   '_events',
//   '_eventsCount',
//   '_maxListeners',
//   '_writableState',
//   'writable',
//   'allowHalfOpen',
//   'destroyed',
//   '_bytesDispatched',
//   '_sockname',
//   '_pendingData',
//   '_pendingEncoding',
//   'server',
//   '_server',
//   'parser',
//   '_httpMessage',
//   'read',
//   '_consuming',
//   '_idleNext',
//   '_idlePrev',
  // '_idleTimeout' ]


// // IncomingMessage(ReadableState)
// ClientRequest


// // ;kop;kop


// IncomingMessage {
//   _readableState: 
   
//   readable: false,
//   domain: null,
 
//   _eventsCount: 4,
//   _maxListeners: undefined,
//   socket: 
//    Socket {
//      connecting: false,
//      _hadError: false,
//      _handle: null,
//      _parent: null,
//      _host: 'localhost',
//      _readableState: 
    
//      readable: false,
//      domain: null,
//      _eventsCount: 8,
//      _maxListeners: undefined,
//      _writableState: 

//      writable: false,
//      allowHalfOpen: false,
//      destroyed: true,
//      _bytesDispatched: 59,
//      _sockname: null,
//      _pendingData: null,
//      _pendingEncoding: '',
//      server: null,
//      _server: null,
//      parser: null,
//      _httpMessage: 
//       ClientRequest {
//         domain: null,
//         _events: [Object],
//         _eventsCount: 5,
//         _maxListeners: undefined,
//         output: [],
//         outputEncodings: [],
//         outputCallbacks: [],
//         outputSize: 0,
//         writable: true,
//         _last: true,
//         upgrading: false,
//         chunkedEncoding: false,
//         shouldKeepAlive: false,
//         useChunkedEncodingByDefault: false,
//         sendDate: false,
//         _removedHeader: {},
//         _contentLength: 0,
//         _hasBody: true,
//         _trailer: '',
//         finished: true,
//         _headerSent: true,
//         socket: [Circular],
//         connection: [Circular],
//         _header: 'GET / HTTP/1.1\r\nhost: localhost:3000\r\nConnection: close\r\n\r\n',
//         _headers: [Object],
//         _headerNames: [Object],
//         _onPendingData: null,
//         agent: [Object],
//         socketPath: undefined,
//         timeout: undefined,
//         method: 'GET',
//         path: '/',
//         _ended: true,
//         parser: null,
//         res: [Circular] },
//      read: [Function],
//      _consuming: true,
//      _idleNext: null,
//      _idlePrev: null,
//      _idleTimeout: -1 },
//   connection: 
//    Socket {
//      connecting: false,
//      _hadError: false,
//      _handle: null,
//      _parent: null,
//      _host: 'localhost',
//      _readableState: 
//       ReadableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         buffer: [Object],
//         length: 0,
//         pipes: null,
//         pipesCount: 0,
//         flowing: true,
//         ended: false,
//         endEmitted: false,
//         reading: true,
//         sync: false,
//         needReadable: true,
//         emittedReadable: false,
//         readableListening: false,
//         resumeScheduled: false,
//         defaultEncoding: 'utf8',
//         ranOut: false,
//         awaitDrain: 0,
//         readingMore: true,
//         decoder: null,
//         encoding: null },
//      readable: false,
//      domain: null,
//      _events: 
//       { end: [Object],
//         finish: [Function: onSocketFinish],
//         _socketEnd: [Function: onSocketEnd],
//         free: [Function: onFree],
//         close: [Object],
//         agentRemove: [Function: onRemove],
//         drain: [Function: ondrain],
//         error: [Function: socketErrorListener] },
//      _eventsCount: 8,
//      _maxListeners: undefined,
//      _writableState: 
//       WritableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         needDrain: false,
//         ending: true,
//         ended: true,
//         finished: true,
//         decodeStrings: false,
//         defaultEncoding: 'utf8',
//         length: 0,
//         writing: false,
//         corked: 0,
//         sync: false,
//         bufferProcessing: false,
//         onwrite: [Function],
//         writecb: null,
//         writelen: 0,
//         bufferedRequest: null,
//         lastBufferedRequest: null,
//         pendingcb: 0,
//         prefinished: true,
//         errorEmitted: false,
//         bufferedRequestCount: 0,
//         corkedRequestsFree: [Object] },
//      writable: false,
//      allowHalfOpen: false,
//      destroyed: true,
//      _bytesDispatched: 59,
//      _sockname: null,
//      _pendingData: null,
//      _pendingEncoding: '',
//      server: null,
//      _server: null,
//      parser: null,
//      _httpMessage: 
//       ClientRequest {
//         domain: null,
//         _events: [Object],
//         _eventsCount: 5,
//         _maxListeners: undefined,
//         output: [],
//         outputEncodings: [],
//         outputCallbacks: [],
//         outputSize: 0,
//         writable: true,
//         _last: true,
//         upgrading: false,
//         chunkedEncoding: false,
//         shouldKeepAlive: false,
//         useChunkedEncodingByDefault: false,
//         sendDate: false,
//         _removedHeader: {},
//         _contentLength: 0,
//         _hasBody: true,
//         _trailer: '',
//         finished: true,
//         _headerSent: true,
//         socket: [Circular],
//         connection: [Circular],
//         _header: 'GET / HTTP/1.1\r\nhost: localhost:3000\r\nConnection: close\r\n\r\n',
//         _headers: [Object],
//         _headerNames: [Object],
//         _onPendingData: null,
//         agent: [Object],
//         socketPath: undefined,
//         timeout: undefined,
//         method: 'GET',
//         path: '/',
//         _ended: true,
//         parser: null,
//         res: [Circular] },
//      read: [Function],
//      _consuming: true,
//      _idleNext: null,
//      _idlePrev: null,
//      _idleTimeout: -1 },
//   httpVersionMajor: 1,
//   httpVersionMinor: 1,
//   httpVersion: '1.1',
//   complete: true,
//   headers: 
//    { 'x-powered-by': 'Express',
//      'accept-ranges': 'bytes',
//      'cache-control': 'public, max-age=0',
//      'last-modified': 'Thu, 19 Oct 2017 13:55:39 GMT',
//      etag: 'W/"2db-15f34eb0778"',
//      'content-type': 'text/html; charset=UTF-8',
//      'content-length': '731',
//      date: 'Thu, 19 Oct 2017 19:45:44 GMT',
//      connection: 'close' },
//   rawHeaders: 
//    [ 'X-Powered-By',
//      'Express',
//      'Accept-Ranges',
//      'bytes',
//      'Cache-Control',
//      'public, max-age=0',
//      'Last-Modified',
//      'Thu, 19 Oct 2017 13:55:39 GMT',
//      'ETag',
//      'W/"2db-15f34eb0778"',
//      'Content-Type',
//      'text/html; charset=UTF-8',
//      'Content-Length',
//      '731',
//      'Date',
//      'Thu, 19 Oct 2017 19:45:44 GMT',
//      'Connection',
//      'close' ],
//   trailers: {},
//   rawTrailers: [],
//   upgrade: false,
//   url: '',
//   method: null,
//   statusCode: 200,
//   statusMessage: 'OK',
//   client: 
//    Socket {
//      connecting: false,
//      _hadError: false,
//      _handle: null,
//      _parent: null,
//      _host: 'localhost',
//      _readableState: 
//       ReadableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         buffer: [Object],
//         length: 0,
//         pipes: null,
//         pipesCount: 0,
//         flowing: true,
//         ended: false,
//         endEmitted: false,
//         reading: true,
//         sync: false,
//         needReadable: true,
//         emittedReadable: false,
//         readableListening: false,
//         resumeScheduled: false,
//         defaultEncoding: 'utf8',
//         ranOut: false,
//         awaitDrain: 0,
//         readingMore: true,
//         decoder: null,
//         encoding: null },
//      readable: false,
//      domain: null,
//      _events: 
//       { end: [Object],
//         finish: [Function: onSocketFinish],
//         _socketEnd: [Function: onSocketEnd],
//         free: [Function: onFree],
//         close: [Object],
//         agentRemove: [Function: onRemove],
//         drain: [Function: ondrain],
//         error: [Function: socketErrorListener] },
//      _eventsCount: 8,
//      _maxListeners: undefined,
//      _writableState: 
//       WritableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         needDrain: false,
//         ending: true,
//         ended: true,
//         finished: true,
//         decodeStrings: false,
//         defaultEncoding: 'utf8',
//         length: 0,
//         writing: false,
//         corked: 0,
//         sync: false,
//         bufferProcessing: false,
//         onwrite: [Function],
//         writecb: null,
//         writelen: 0,
//         bufferedRequest: null,
//         lastBufferedRequest: null,
//         pendingcb: 0,
//         prefinished: true,
//         errorEmitted: false,
//         bufferedRequestCount: 0,
//         corkedRequestsFree: [Object] },
//      writable: false,
//      allowHalfOpen: false,
//      destroyed: true,
//      _bytesDispatched: 59,
//      _sockname: null,
//      _pendingData: null,
//      _pendingEncoding: '',
//      server: null,
//      _server: null,
//      parser: null,
//      _httpMessage: 
//       ClientRequest {
//         domain: null,
//         _events: [Object],
//         _eventsCount: 5,
//         _maxListeners: undefined,
//         output: [],
//         outputEncodings: [],
//         outputCallbacks: [],
//         outputSize: 0,
//         writable: true,
//         _last: true,
//         upgrading: false,
//         chunkedEncoding: false,
//         shouldKeepAlive: false,
//         useChunkedEncodingByDefault: false,
//         sendDate: false,
//         _removedHeader: {},
//         _contentLength: 0,
//         _hasBody: true,
//         _trailer: '',
//         finished: true,
//         _headerSent: true,
//         socket: [Circular],
//         connection: [Circular],
//         _header: 'GET / HTTP/1.1\r\nhost: localhost:3000\r\nConnection: close\r\n\r\n',
//         _headers: [Object],
//         _headerNames: [Object],
//         _onPendingData: null,
//         agent: [Object],
//         socketPath: undefined,
//         timeout: undefined,
//         method: 'GET',
//         path: '/',
//         _ended: true,
//         parser: null,
//         res: [Circular] },
//      read: [Function],
//      _consuming: true,
//      _idleNext: null,
//      _idlePrev: null,
//      _idleTimeout: -1 },
//   _consuming: true,
//   _dumped: false,
//   req: 
//    ClientRequest {
//      domain: null,
//      _events: 
//       { socket: [Function],
//         response: [Function: bound ],
//         error: [Function: bound ],
//         drain: [Function],
//         prefinish: [Function: requestOnPrefinish] },
//      _eventsCount: 5,
//      _maxListeners: undefined,
//      output: [],
//      outputEncodings: [],
//      outputCallbacks: [],
//      outputSize: 0,
//      writable: true,
//      _last: true,
//      upgrading: false,
//      chunkedEncoding: false,
//      shouldKeepAlive: false,
//      useChunkedEncodingByDefault: false,
//      sendDate: false,
//      _removedHeader: {},
//      _contentLength: 0,
//      _hasBody: true,
//      _trailer: '',
//      finished: true,
//      _headerSent: true,
//      socket: 
//       Socket {
//         connecting: false,
//         _hadError: false,
//         _handle: null,
//         _parent: null,
//         _host: 'localhost',
//         _readableState: [Object],
//         readable: false,
//         domain: null,
//         _events: [Object],
//         _eventsCount: 8,
//         _maxListeners: undefined,
//         _writableState: [Object],
//         writable: false,
//         allowHalfOpen: false,
//         destroyed: true,
//         _bytesDispatched: 59,
//         _sockname: null,
//         _pendingData: null,
//         _pendingEncoding: '',
//         server: null,
//         _server: null,
//         parser: null,
//         _httpMessage: [Circular],
//         read: [Function],
//         _consuming: true,
//         _idleNext: null,
//         _idlePrev: null,
//         _idleTimeout: -1 },
//      connection: 
//       Socket {
//         connecting: false,
//         _hadError: false,
//         _handle: null,
//         _parent: null,
//         _host: 'localhost',
//         _readableState: [Object],
//         readable: false,
//         domain: null,
//         _events: [Object],
//         _eventsCount: 8,
//         _maxListeners: undefined,
//         _writableState: [Object],
//         writable: false,
//         allowHalfOpen: false,
//         destroyed: true,
//         _bytesDispatched: 59,
//         _sockname: null,
//         _pendingData: null,
//         _pendingEncoding: '',
//         server: null,
//         _server: null,
//         parser: null,
//         _httpMessage: [Circular],
//         read: [Function],
//         _consuming: true,
//         _idleNext: null,
//         _idlePrev: null,
//         _idleTimeout: -1 },
//      _header: 'GET / HTTP/1.1\r\nhost: localhost:3000\r\nConnection: close\r\n\r\n',
//      _headers: { host: 'localhost:3000' },
//      _headerNames: { host: 'host' },
//      _onPendingData: null,
//      agent: 
//       Agent {
//         domain: null,
//         _events: [Object],
//         _eventsCount: 1,
//         _maxListeners: undefined,
//         defaultPort: 80,
//         protocol: 'http:',
//         options: [Object],
//         requests: {},
//         sockets: [Object],
//         freeSockets: {},
//         keepAliveMsecs: 1000,
//         keepAlive: false,
//         maxSockets: Infinity,
//         maxFreeSockets: 256 },
//      socketPath: undefined,
//      timeout: undefined,
//      method: 'GET',
//      path: '/',
//      _ended: true,
//      parser: null,
//      res: [Circular] },
//   request: 
//    Request {
//      domain: null,
//      _events: 
//       { error: [Function: bound ],
//         complete: [Function: bound ],
//         pipe: [Function],
//         data: [Function],
//         end: [Function] },
//      _eventsCount: 5,
//      _maxListeners: undefined,
//      uri: 
//       Url {
//         protocol: 'http:',
//         slashes: true,
//         auth: null,
//         host: 'localhost:3000',
//         port: '3000',
//         hostname: 'localhost',
//         hash: null,
//         search: null,
//         query: null,
//         pathname: '/',
//         path: '/',
//         href: 'http://localhost:3000/' },
//      callback: [Function],
//      readable: true,
//      writable: true,
//      _qs: 
//       Querystring {
//         request: [Circular],
//         lib: [Object],
//         useQuerystring: undefined,
//         parseOptions: {},
//         stringifyOptions: {} },
//      _auth: 
//       Auth {
//         request: [Circular],
//         hasAuth: false,
//         sentAuth: false,
//         bearerToken: null,
//         user: null,
//         pass: null },
//      _oauth: OAuth { request: [Circular], params: null },
//      _multipart: 
//       Multipart {
//         request: [Circular],
//         boundary: '520e94e7-bdef-45f6-a339-000740832da9',
//         chunked: false,
//         body: null },
//      _redirect: 
//       Redirect {
//         request: [Circular],
//         followRedirect: true,
//         followRedirects: true,
//         followAllRedirects: false,
//         followOriginalHttpMethod: false,
//         allowRedirect: [Function],
//         maxRedirects: 10,
//         redirects: [],
//         redirectsFollowed: 0,
//         removeRefererHeader: false },
//      _tunnel: 
//       Tunnel {
//         request: [Circular],
//         proxyHeaderWhiteList: [Object],
//         proxyHeaderExclusiveList: [] },
//      headers: {},
//      setHeader: [Function],
//      hasHeader: [Function],
//      getHeader: [Function],
//      removeHeader: [Function],
//      method: 'GET',
//      localAddress: undefined,
//      pool: {},
//      dests: [],
//      __isRequestRequest: true,
//      _callback: [Function],
//      proxy: null,
//      tunnel: false,
//      setHost: true,
//      originalCookieHeader: undefined,
//      _disableCookies: true,
//      _jar: undefined,
//      port: '3000',
//      host: 'localhost',
//      path: '/',
//      httpModule: 
//       { IncomingMessage: [Object],
//         METHODS: [Object],
//         OutgoingMessage: [Object],
//         ServerResponse: [Object],
//         STATUS_CODES: [Object],
//         Agent: [Object],
//         globalAgent: [Object],
//         ClientRequest: [Object],
//         request: [Function],
//         get: [Function],
//         _connectionListener: [Function: connectionListener],
//         Server: [Object],
//         createServer: [Function],
//         Client: [Function: deprecated],
//         createClient: [Function: deprecated] },
//      agentClass: { [Function: Agent] super_: [Object], defaultMaxSockets: Infinity },
//      agent: 
//       Agent {
//         domain: null,
//         _events: [Object],
//         _eventsCount: 1,
//         _maxListeners: undefined,
//         defaultPort: 80,
//         protocol: 'http:',
//         options: [Object],
//         requests: {},
//         sockets: [Object],
//         freeSockets: {},
//         keepAliveMsecs: 1000,
//         keepAlive: false,
//         maxSockets: Infinity,
//         maxFreeSockets: 256 },
//      _started: true,
//      href: 'http://localhost:3000/',
//      req: 
//       ClientRequest {
//         domain: null,
//         _events: [Object],
//         _eventsCount: 5,
//         _maxListeners: undefined,
//         output: [],
//         outputEncodings: [],
//         outputCallbacks: [],
//         outputSize: 0,
//         writable: true,
//         _last: true,
//         upgrading: false,
//         chunkedEncoding: false,
//         shouldKeepAlive: false,
//         useChunkedEncodingByDefault: false,
//         sendDate: false,
//         _removedHeader: {},
//         _contentLength: 0,
//         _hasBody: true,
//         _trailer: '',
//         finished: true,
//         _headerSent: true,
//         socket: [Object],
//         connection: [Object],
//         _header: 'GET / HTTP/1.1\r\nhost: localhost:3000\r\nConnection: close\r\n\r\n',
//         _headers: [Object],
//         _headerNames: [Object],
//         _onPendingData: null,
//         agent: [Object],
//         socketPath: undefined,
//         timeout: undefined,
//         method: 'GET',
//         path: '/',
//         _ended: true,
//         parser: null,
//         res: [Circular] },
//      ntick: true,
//      response: [Circular],
//      originalHost: 'localhost:3000',
//      originalHostHeaderName: 'host',
//      responseContent: [Circular],
//      _destdata: true,
//      _ended: true,
//      _callbackCalled: true },
//   toJSON: [Function: responseToJSON],
//   caseless: 
//    Caseless {
//      dict: 
//       { 'x-powered-by': 'Express',
//         'accept-ranges': 'bytes',
//         'cache-control': 'public, max-age=0',
//         'last-modified': 'Thu, 19 Oct 2017 13:55:39 GMT',
//         etag: 'W/"2db-15f34eb0778"',
//         'content-type': 'text/html; charset=UTF-8',
//         'content-length': '731',
//         date: 'Thu, 19 Oct 2017 19:45:44 GMT',
//         connection: 'close' } },
//   read: [Function],
//   body: '<!doctype html>\n<html lang="en">\n<head>\n  <meta charset="utf-8">\n  <title>Front</title>\n  <base href="/">\n  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n  <link rel="icon" type="image/x-icon" href="favicon.ico">\n</head>\n<body>\n  <app-root></app-root>\n  <!-- <app-main></app-main> -->\n<script type="text/javascript" src="inline.bundle.js"></script><script type="text/javascript" src="polyfills.bundle.js"></script><script type="text/javascript" src="styles.bundle.js"></script><script type="text/javascript" src="vendor.bundle.js"></script><script type="text/javascript" src="main.bundle.js"></script></body>\n</html>\n' }